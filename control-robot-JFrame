/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * controlRobot.java
 *
 * Created on 11 avr. 2015, 10:39:47
 */
package javaapplication1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class controlRobot extends javax.swing.JFrame {

    /** Creates new form controlRobot */
    public String strP;
     public String ipaddr="192.168.7.101";
    
    public controlRobot() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Fleche-droite-bleue-icon.png"))); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(200, 140, 49, 25);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Fleche-gauche-bleue-icon.png"))); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(80, 140, 49, 25);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Fleche-haut-bleue-icon.png"))); // NOI18N
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(140, 100, 49, 25);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Fleche-bas-bleue-icon.png"))); // NOI18N
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(140, 180, 49, 25);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Actions-stop-icon.png"))); // NOI18N
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(140, 140, 49, 25);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(170, 50, 90, 30);

        jButton6.setText("connect");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(90, 50, 71, 23);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Sans titre.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 340, 310);

        pack();
    }// </editor-fold>                        

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO add your handling code here:
}                                        

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO add your handling code here:
    ipaddr=jTextField1.getText();
}                                        

private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {                                      
        try {
            // TODO add your handling code here:
                BufferedReader inFromUser =
                        new BufferedReader(new InputStreamReader(System.in));
                        DatagramSocket clientSocket = new DatagramSocket();
                        InetAddress IPAddress = InetAddress.getByName(ipaddr);
                        byte[] sendData = new byte[1024];
                        //byte[] receiveData = new byte[1024];
                        String sentence = "r";//inFromUser.readLine();
                        sendData = sentence.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 13000);
                        clientSocket.send(sendPacket);
                        clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(controlRobot.class.getName()).log(Level.SEVERE, null, ex);
        } 
}                                     

private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {                                      
        try {
            // TODO add your handling code here:
                BufferedReader inFromUser =
                        new BufferedReader(new InputStreamReader(System.in));
                        DatagramSocket clientSocket = new DatagramSocket();
                        InetAddress IPAddress = InetAddress.getByName(ipaddr);
                        byte[] sendData = new byte[1024];
                        //byte[] receiveData = new byte[1024];
                        String sentence = "s";//inFromUser.readLine();
                        sendData = sentence.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 13000);
                        clientSocket.send(sendPacket);
                        clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(controlRobot.class.getName()).log(Level.SEVERE, null, ex);
        } 
}                                     

private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {                                      
        try {
            // TODO add your handling code here:
                BufferedReader inFromUser =
                        new BufferedReader(new InputStreamReader(System.in));
                        DatagramSocket clientSocket = new DatagramSocket();
                        InetAddress IPAddress = InetAddress.getByName(ipaddr);
                        byte[] sendData = new byte[1024];
                        //byte[] receiveData = new byte[1024];
                        String sentence = "b";//inFromUser.readLine();
                        sendData = sentence.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 13000);
                        clientSocket.send(sendPacket);
                        clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(controlRobot.class.getName()).log(Level.SEVERE, null, ex);
        } 
}                                     

private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        try {
            // TODO add your handling code here:
                 BufferedReader inFromUser =
                        new BufferedReader(new InputStreamReader(System.in));
                        DatagramSocket clientSocket = new DatagramSocket();
                        InetAddress IPAddress = InetAddress.getByName(ipaddr);
                        byte[] sendData = new byte[1024];
                        //byte[] receiveData = new byte[1024];
                        String sentence = "i";//inFromUser.readLine();
                        sendData = sentence.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 13000);
                        clientSocket.send(sendPacket);
                        clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(controlRobot.class.getName()).log(Level.SEVERE, null, ex);
        } 
}                                     

private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {                                      
        try {
            // TODO add your handling code here:
                BufferedReader inFromUser =
                        new BufferedReader(new InputStreamReader(System.in));
                        DatagramSocket clientSocket = new DatagramSocket();
                        InetAddress IPAddress = InetAddress.getByName(ipaddr);
                        byte[] sendData = new byte[1024];
                        //byte[] receiveData = new byte[1024];
                        String sentence = "l";//inFromUser.readLine();
                        sendData = sentence.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 13000);
                        clientSocket.send(sendPacket);
                        clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(controlRobot.class.getName()).log(Level.SEVERE, null, ex);
        } 
}                                     

private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {                                      
// TODO add your handling code here:
}                                     

private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
// TODO add your handling code here:
}                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(controlRobot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(controlRobot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(controlRobot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(controlRobot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new controlRobot().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
